// $ANTLR : "eax.g" -> "EAXParser.java"$

package edu.cmu.sei.aadl.errorannex.parser;


public interface EAXParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int IDENT = 4;
	int FEATURES = 5;
	int END = 6;
	int SEMI = 7;
	int COLON = 8;
	int ERROR = 9;
	int EVENT = 10;
	int LCURLY = 11;
	int OCCURRENCE = 12;
	int ASSIGN = 13;
	int RCURLY = 14;
	int IN = 15;
	int OUT = 16;
	int PROPAGATION = 17;
	int INITIAL = 18;
	int INACTIVE = 19;
	int STATE = 20;
	int MODEL = 21;
	int IMPL = 22;
	int DOT = 23;
	int TRANSITIONS = 24;
	int NONE = 25;
	int PROPERTIES = 26;
	int COMMA = 27;
	int LTRANS = 28;
	int RTRANS = 29;
	int ACTIVATE = 30;
	int DEACTIVATE = 31;
	int FIXED = 32;
	int POISSON = 33;
	int NONSTANDARD = 34;
	int DOUBLECOLON = 35;
	int NUMERIC_LIT = 36;
	int PLUS = 37;
	int MINUS = 38;
	int STAR = 39;
	int REPORT = 40;
	int MODEL_HIERARCHY = 41;
	int DERIVED_STATE_MAPPING = 42;
	int APPLIES = 43;
	int TO = 44;
	int GUARD_IN = 45;
	int GUARD_OUT = 46;
	int GUARD_EVENT = 47;
	int GUARD_TRANSITION = 48;
	int MASK = 49;
	int WHEN = 50;
	int NOT = 51;
	int LPAREN = 52;
	int RPAREN = 53;
	int AND = 54;
	int OR = 55;
	int ORMORE = 56;
	int ORLESS = 57;
	int OTHERS = 58;
	int SELF = 59;
	int LSQUARE = 60;
	int RSQUARE = 61;
	int DERIVED = 62;
	int ABSTRACT = 63;
	int ABSTRACTION = 64;
	int ACCESS = 65;
	int ALL = 66;
	int ANNEX = 67;
	int BINDING = 68;
	int BOOLEAN = 69;
	int BUS = 70;
	int CALLS = 71;
	int CLASSIFIER = 72;
	int CONNECTIONS = 73;
	int CONSTANT = 74;
	int DATA = 75;
	int DELTA = 76;
	int DEVICE = 77;
	int ENUMERATION = 78;
	int EXTENDS = 79;
	int FALSE = 80;
	int FLOW = 81;
	int FLOWS = 82;
	int GROUP = 83;
	int INHERIT = 84;
	int INTEGER = 85;
	int INVERSE = 86;
	int IS = 87;
	int LIST = 88;
	int MEMORY = 89;
	int MODE = 90;
	int MODES = 91;
	int OF = 92;
	int PACKAGE = 93;
	int PARAMETER = 94;
	int PATH = 95;
	int PORT = 96;
	int PRIVATE = 97;
	int PROCESS = 98;
	int PROCESSOR = 99;
	int PROPERTY = 100;
	int PROVIDES = 101;
	int PUBLIC = 102;
	int RANGE = 103;
	int REAL = 104;
	int REFERENCE = 105;
	int REFINED = 106;
	int REFINES = 107;
	int REQUIRES = 108;
	int SERVER = 109;
	int SET = 110;
	int SINK = 111;
	int SOURCE = 112;
	int STRING = 113;
	int SUBCOMPONENTS = 114;
	int SUBPROGRAM = 115;
	int SYSTEM = 116;
	int THREAD = 117;
	int TRUE = 118;
	int TYPE = 119;
	int UNITS = 120;
	int VALUE = 121;
	int DOTDOT = 122;
	int ASSIGNPLUS = 123;
	int ARROW = 124;
	int DARROW = 125;
	int HASH = 126;
	int STRING_LITERAL = 127;
	int DIGIT = 128;
	int EXPONENT = 129;
	int INT_EXPONENT = 130;
	int EXTENDED_DIGIT = 131;
	int BASED_INTEGER = 132;
	int BASE = 133;
	int ESC = 134;
	int HEX_DIGIT = 135;
	int WS = 136;
	int ANNEX_TEXT = 137;
	int SL_COMMENT = 138;
}
